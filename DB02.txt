not 연산자 : 해당 조건을 제외한 결과를 조회
ex) 직종이 SA_MAN이거나 IT_PROG인 경우를 제외하고 직종과 이름을 조회
SELECT job_id, first_name
FROM employees
WHERE job_id != 'SA_MAN' AND job_id != 'IT_PROG';

SELECT job_id, first_name
FROM employees
WHERE job_id NOT IN('SA_MAN', 'IT_PROG');

ex) 이름이 A로 시작되는 사원들은 제외하고 이름을 출력하시오

SELECT first_name
FROM employees
WHERE first_name NOT LIKE ('A%') ;

ex) 부서번호가 100번이 아닌 나머지 사원들의 이름과 부서번호를 출력
SELECT first_name, department_id
FROM employees
WHERE department_id != 100;

WHERE department_id NOT IN(100);

-----------------------------------------------------------------------
--3. order by(정렬) : 검색결과에 반환된 행들을 정렬하고자 할 때
1)ASC : 오름차순(생략 가능)
2)DESC : 내림차순(생략 불가)
ex) 사원테이블에서 급여를 많이 받는 사원순으로 이름, 급여를 출력하시오
단, 급여가 같을 경우 이름의 알파벳 순으로 오름차순 정렬
SELECT first_name, salary
FROM employees
ORDER BY salary DESC, first_name ASC;

문) 급여가 15000이상인 사원들의 이름과, 급여, 입사일을 입사일이 빠른순으로 조회하되, 
입사일이 같다면 이름내림차순으로 조회
SELECT first_name, salary,hire_date 
FROM employees
ORDER BY hire_date, first_name DESC;

문) 부서번호가 작은순으로 정렬하되, 부서번호가 같은 경우
급여가 높은 순으로 정렬하여 이름, 부서번호, 급여순으로 출력
SELECT first_name, department_id, salary
FROM employees
ORDER BY department_id, salary DESC;

문) 사원테이블에서 부서번호가 빠른순, 부서번호가 같다면
직종의 알파벳 빠른순, 직종까지 같다면 급여를 많이 받는 사원이
위에 보여지도록 부서번호, 이름, 입사일, 직종, 급여 순으로 출력
SELECT department_id, first_name, job_id, salary
FROM employees
ORDER BY department_id, job_id, salary DESC;

문)직종이 ST_CLERK이 아닌 나머지 직종에서
사번, 이름, 직종을 사번이 큰 순으로 정렬
SELECT employee_id, first_name, job_id
FROM employees
WHERE NOT job_id = 'ST_CLERK'
ORDER BY employee_id DESC; 

문)이름에 중간에 s가 포함되어 있지 않은 사원들의 사번, 이름, 직종을
직종오름차순으로 정렬
SELECT employee_id, first_name, job_id
FROM employees
WHERE first_name NOT LIKE '%s%'
ORDER BY job_id;

---------------------------------------------------------------------
--4.그룹함수 : 여러개의 행이나 테이블 전체에 대하여 함수를 적용해
하나의 결과를 돌려받는 기능
1) AVG() : 평균
2) COUNT(): 행의 갯수
3) MAX() : 최대값
4) MIN() : 최소값
5) SUM() : 총 합
cf)SELECT COUNT(*), salary
FROM employees;
--위와 같이 그룹함수와 일반 컬럼을 함께 확인할 수 없다.

예) 사원테이블의 모든 사원의 수를 출력하시오
SELECT COUNT(*) total 
FROM employees;

예) 담당자 번호를 가지고 있는 사원의 수를 출력
SELECT COUNT(manager_id)
FROM employees;

예) 보너스를 받는 사원들의 인원수를 출력
SELECT COUNT(commission_pct) 
FROM employees;

예) 담당자 번호를 가지고 있는 사원의 수를 출력
-- DISTINCT : 중복된 결과값은 배제한다
SELECT COUNT(DISTINCT manager_id) 
FROM employees;

예) 총 부서의 수를 출력
SELECT COUNT(DISTINCT department_id)
FROM employees;

문) 직종이 SA_REP인 사원들의 급여의 평균, 최고급여, 최저급여, 모든급여의 합계액을 출력
SELECT AVG(salary), MAX(salary), MIN(salary), SUM(salary)
FROM employees
WHERE job_id = 'SA_REP';

문) 부서번호가 80번인 사원들의 평균 급여를 출력
SELECT AVG(salary)
FROM employees
WHERE department_id = 80;

--숫자함수
1) round() : 반올림
2) trunc() : 버림
3) mod() : 나머지 값
4) 
예) 부서번호가 80번인 사원들의 평균 급여를 소수점 둘째자리까지 출력
SELECT ROUND(AVG(salary), 2)
FROM employees
WHERE department_id = 80;

예) dual : 가상(임시)테이블
SELECT TRUNC(8955.9999, 1)
FROM dual;

예) mod : 나머지 값 구하기
SELECT MOD(10, 4)
FROM dual;

--문자함수 : 문자와 관련된 함수
1)initcap() : 첫 글자를 대문자로 변환
2)lower() : 대문자 -> 소문자
3)upper() : 소문자 - > 대문자
4)substr() : 특정 문장을 잘라내는 함수
5)replace() : 필요한 문자를 교체
6)length() : 문장의 길이를 반환

SELECT INITCAP('good morning')
FROM dual;
SELECT INITCAP('good/morning')
FROM dual;
SELECT LOWER('GOOD MORNING') 
FROM dual;
SELECT UPPER('good morning') FROM dual;

예) 사원 테이블에서 이름이 Michael인 사원에 대한 사번과 이름을 조회
SELECT employee_id, first_name
FROM employees
WHERE LOWER(first_name) = 'michael';

SELECT substr('good morning john' , 8 , 4)
FROM dual;

예) 사원 테이블에서 이름, 입사일을 출력하되 입사일은 연도(01/01/2005)만 보여주시오
SELECT first_name, SUBSTR(hire_date, 7, 4) year
FROM employees;

SELECT replace('good' , 'o', 'a') 
FROM dual;

SELECT replace('good morning john', 'morning','evening')
FROM dual;

SELECT first_name, length(first_name)
FROM employees;

*** || : 문자와 문자를 연결하는 키워드
SELECT first_name, last_name, first_name||' '||last_name full_name
FROM employees;

-------------------------------------------------------------------
--날짜함수(현재 날짜를 저장하는 키워드 sysdate)
1)MONTHS_BETWEEN : 날짜와 날짜 사이의 개월 수
2)ADD_MONTHS : 특정 날짜에서 x개월 후의 날짜를 가져온다
3)Last_Day : 해당 월의 마지막 날
--날짜형식 모델
SCC : 세기
YYYY : 년도
MM : 월
MONTH, MON : 월명
DD : 일
DAY : 요일
HH : 시간
MI : 분
SS : 초

예) 현재 날짜 출력 
SELECT sysdate 
FROM dual;

예) months_between을 통해 입사일로부터 오늘까지 몇개월이 경과했는지 확인
SELECT first_name, sysdate, hire_date, TRUNC(MONTHS_BETWEEN(sysdate,hire_date), 0) months
FROM employees;

문) 입사기간이 200개월 이상인 사원들의 이름, 입사일, 입사일부터 현재까지의 개월 수를 조회
SELECT first_name, hire_date, TRUNC(MONTHS_BETWEEN(sysdate,hire_date), 0) period
FROM employees
WHERE MONTHS_BETWEEN(sysdate,hire_date) >= 200
ORDER BY  MONTHS_BETWEEN(sysdate,hire_date) DESC;


예) 입사일로부터 6개월 후의 날짜를 가져와보자
SELECT first_name, hire_date, ADD_MONTHS(hire_date, 6)
FROM employees;

문) 사번이 120번인 사원이 입사 후 3년 6개월이 지난 시점에서 퇴사를 했다.
이 사원의 사번, 이름, 입사일, 퇴사일을 출력

SELECT first_name, hire_date, ADD_MONTHS(hire_date, 12*3+6)
FROM employees
WHERE employee_id = 120;

예) 오늘을 기준으로 가장 빨리 돌아오는 요일을 반환
SELECT sysdate, NEXT_DAY(sysdate, 2)
FROM dual;

예)이번달의 마지막 날 
SELECT LAST_DAY(sysdate) 
FROM dual;

--문자함수(to_char())를 통해 날짜 형식 바꾸기
SELECT TO_CHAR(sysdate,'YYYY_MM_DD') FROM dual;
SELECT TO_CHAR(sysdate,'YY.MM.DD') FROM dual;
SELECT TO_CHAR(sysdate,'YY.MM.D') FROM dual;
SELECT TO_CHAR(sysdate,'YY.MM.DD MONTH') Day  FROM dual;
SELECT TO_CHAR(sysdate, 'YY.MM.DD HH24:MI:SS SCC') FROM dual;









